# ---------------------------------------------
# Anchors for Common Configurations
# ---------------------------------------------
x-drive-common:
  &drive-common
  restart: always
  networks:
    - drive-monitoring
  healthcheck:
    &uniform-frequency
    interval: 10s
    timeout: 5s
    retries: 3
  
x-drive-logging:
  &drive-logging
  driver: json-file
  options:
    tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}" 
  
x-lables:
  labels:
     &drive-labels
    com.project.name: "PROJCET DRIVE"
    com.drive.description: "DRIVE application"
    com.drive.supported_os: "ubuntu, debian"
    com.drive.deployment: "docker podman"
    
#-----------------------------------------------------------------------------------------------
#                                      DRIVE MONITORING
#-----------------------------------------------------------------------------------------------
services:
  monitoring-prometheus:
    <<: *drive-common
    image: ${PROMETHEUS_IMAGE}
    container_name: monitoring-prometheus
    hostname: monitoring-prometheus
    user: "nobody"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=1y'
      # /!\ Uncomment the following line to set a size limit for the Prometheus database /!\
      # - '--storage.tsdb.retention.size=10GB'
    expose:
      - 9090
    volumes:
      # /!\ To be modified depending on your needs /!\
      - prometheus_data:/prometheus
      - ./monitoring/prometheus:/etc/prometheus/
    depends_on:
      monitoring-cadvisor:
        condition: service_healthy
      monitoring-node-exporter:
        condition: service_healthy
    links:
      - monitoring-cadvisor:monitoring-cadvisor
      - monitoring-node-exporter:monitoring-node-exporter
    healthcheck: 
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      <<: *uniform-frequency
    labels:
      <<: *drive-labels
    logging:
      <<: *drive-logging

  monitoring-grafana:
    <<: *drive-common
    image: ${GRAFANA_IMAGE}
    container_name: monitoring-grafana
    hostname: monitoring-grafana
    user: "472"
    ports:
      - "5002:3000"
    env_file:
      - ./monitoring/grafana/grafana.env
    volumes:
      # /!\ To be modified depending on your needs /!\
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      monitoring-prometheus:
        condition: service_healthy
    healthcheck: 
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      <<: *uniform-frequency
    labels:
      <<: *drive-labels
    logging:
      <<: *drive-logging

  monitoring-cadvisor:
    <<: *drive-common
    image: ${CADVISOR_IMAGE}
    container_name: monitoring-cadvisor
    hostname: monitoring-cadvisor
    privileged: true
    expose:
      - 8080
    command:
      - '-housekeeping_interval=15s'
      - '-docker_only=true'
      - '-store_container_labels=false'
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/machine-id:/etc/machine-id:ro
    healthcheck: 
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/metrics"]
      <<: *uniform-frequency
    labels:
      <<: *drive-labels
    logging:
      <<: *drive-logging

  monitoring-node-exporter:
    <<: *drive-common
    image: ${NODE_EXPORTER_IMAGE}
    container_name: monitoring-node-exporter
    hostname: monitoring-node-exporter
    expose:
      - 9100
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /var/lib/docker:/var/lib/docker:ro
    healthcheck: 
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9100/metrics"]
      <<: *uniform-frequency
    logging:
      <<: *drive-logging

#-----------------------------------------------------------------------------------------------
#                                      DRIVE LOGGING
#-----------------------------------------------------------------------------------------------
  logging-loki:
    <<: *drive-common
    image: ${LOKI_IMAGE}
    container_name: logging-loki
    ports:
      - "5002:3100"             # To enable promtail access from other servers
    volumes:
      - ./logging/loki:/etc/loki/
    command: -config.file=/etc/loki/loki-config.yaml
    healthcheck: 
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3100/ready"]
      <<: *uniform-frequency
    logging:
      <<: *drive-logging

  logging-promtail:
    <<: *drive-common
    image: ${PROMTAIL_IMAGE}
    container_name: logging-promtail
    volumes:
    - /var/log:/var/log:ro
    - /var/lib/docker/containers:/host/containers:ro
    - ./logging/promtail/master-server:/etc/promtail
    command: -config.file=/etc/promtail/promtail-config.yml
    depends_on:
      logging-loki:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "ls", "/var/log"]
      <<: *uniform-frequency
    labels:
      <<: *drive-labels
    logging:
      <<: *drive-logging

volumes:
  grafana_data:
    name: grafana_data
  prometheus_data:
    name: prometheus_data
  
networks:
  drive-monitoring:
    name: drive-monitoring
    driver: bridge